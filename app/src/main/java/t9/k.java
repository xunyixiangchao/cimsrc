package t9;

import aa.c;
import aa.d;
import aa.e;
import m9.l;

public final class k
{
  public static final k a = new k();
  private static final int[] b = { 8184, 8388568, 268435426, 268435427, 268435428, 268435429, 268435430, 268435431, 268435432, 16777194, 1073741820, 268435433, 268435434, 1073741821, 268435435, 268435436, 268435437, 268435438, 268435439, 268435440, 268435441, 268435442, 1073741822, 268435443, 268435444, 268435445, 268435446, 268435447, 268435448, 268435449, 268435450, 268435451, 20, 1016, 1017, 4090, 8185, 21, 248, 2042, 1018, 1019, 249, 2043, 250, 22, 23, 24, 0, 1, 2, 25, 26, 27, 28, 29, 30, 31, 92, 251, 32764, 32, 4091, 1020, 8186, 33, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 252, 115, 253, 8187, 524272, 8188, 16380, 34, 32765, 3, 35, 4, 36, 5, 37, 38, 39, 6, 116, 117, 40, 41, 42, 7, 43, 118, 44, 8, 9, 45, 119, 120, 121, 122, 123, 32766, 2044, 16381, 8189, 268435452, 1048550, 4194258, 1048551, 1048552, 4194259, 4194260, 4194261, 8388569, 4194262, 8388570, 8388571, 8388572, 8388573, 8388574, 16777195, 8388575, 16777196, 16777197, 4194263, 8388576, 16777198, 8388577, 8388578, 8388579, 8388580, 2097116, 4194264, 8388581, 4194265, 8388582, 8388583, 16777199, 4194266, 2097117, 1048553, 4194267, 4194268, 8388584, 8388585, 2097118, 8388586, 4194269, 4194270, 16777200, 2097119, 4194271, 8388587, 8388588, 2097120, 2097121, 4194272, 2097122, 8388589, 4194273, 8388590, 8388591, 1048554, 4194274, 4194275, 4194276, 8388592, 4194277, 4194278, 8388593, 67108832, 67108833, 1048555, 524273, 4194279, 8388594, 4194280, 33554412, 67108834, 67108835, 67108836, 134217694, 134217695, 67108837, 16777201, 33554413, 524274, 2097123, 67108838, 134217696, 134217697, 67108839, 134217698, 16777202, 2097124, 2097125, 67108840, 67108841, 268435453, 134217699, 134217700, 134217701, 1048556, 16777203, 1048557, 2097126, 4194281, 2097127, 2097128, 8388595, 4194282, 4194283, 33554414, 33554415, 16777204, 16777205, 67108842, 8388596, 67108843, 134217702, 67108844, 67108845, 134217703, 134217704, 134217705, 134217706, 134217707, 268435454, 134217708, 134217709, 134217710, 134217711, 134217712, 67108846 };
  private static final byte[] c;
  private static final a d;
  
  static
  {
    byte[] arrayOfByte = new byte[256];
    byte[] tmp1704_1703 = arrayOfByte;
    tmp1704_1703[0] = 13;
    byte[] tmp1709_1704 = tmp1704_1703;
    tmp1709_1704[1] = 23;
    byte[] tmp1714_1709 = tmp1709_1704;
    tmp1714_1709[2] = 28;
    byte[] tmp1719_1714 = tmp1714_1709;
    tmp1719_1714[3] = 28;
    byte[] tmp1724_1719 = tmp1719_1714;
    tmp1724_1719[4] = 28;
    byte[] tmp1729_1724 = tmp1724_1719;
    tmp1729_1724[5] = 28;
    byte[] tmp1734_1729 = tmp1729_1724;
    tmp1734_1729[6] = 28;
    byte[] tmp1740_1734 = tmp1734_1729;
    tmp1740_1734[7] = 28;
    byte[] tmp1746_1740 = tmp1740_1734;
    tmp1746_1740[8] = 28;
    byte[] tmp1752_1746 = tmp1746_1740;
    tmp1752_1746[9] = 24;
    byte[] tmp1758_1752 = tmp1752_1746;
    tmp1758_1752[10] = 30;
    byte[] tmp1764_1758 = tmp1758_1752;
    tmp1764_1758[11] = 28;
    byte[] tmp1770_1764 = tmp1764_1758;
    tmp1770_1764[12] = 28;
    byte[] tmp1776_1770 = tmp1770_1764;
    tmp1776_1770[13] = 30;
    byte[] tmp1782_1776 = tmp1776_1770;
    tmp1782_1776[14] = 28;
    byte[] tmp1788_1782 = tmp1782_1776;
    tmp1788_1782[15] = 28;
    byte[] tmp1794_1788 = tmp1788_1782;
    tmp1794_1788[16] = 28;
    byte[] tmp1800_1794 = tmp1794_1788;
    tmp1800_1794[17] = 28;
    byte[] tmp1806_1800 = tmp1800_1794;
    tmp1806_1800[18] = 28;
    byte[] tmp1812_1806 = tmp1806_1800;
    tmp1812_1806[19] = 28;
    byte[] tmp1818_1812 = tmp1812_1806;
    tmp1818_1812[20] = 28;
    byte[] tmp1824_1818 = tmp1818_1812;
    tmp1824_1818[21] = 28;
    byte[] tmp1830_1824 = tmp1824_1818;
    tmp1830_1824[22] = 30;
    byte[] tmp1836_1830 = tmp1830_1824;
    tmp1836_1830[23] = 28;
    byte[] tmp1842_1836 = tmp1836_1830;
    tmp1842_1836[24] = 28;
    byte[] tmp1848_1842 = tmp1842_1836;
    tmp1848_1842[25] = 28;
    byte[] tmp1854_1848 = tmp1848_1842;
    tmp1854_1848[26] = 28;
    byte[] tmp1860_1854 = tmp1854_1848;
    tmp1860_1854[27] = 28;
    byte[] tmp1866_1860 = tmp1860_1854;
    tmp1866_1860[28] = 28;
    byte[] tmp1872_1866 = tmp1866_1860;
    tmp1872_1866[29] = 28;
    byte[] tmp1878_1872 = tmp1872_1866;
    tmp1878_1872[30] = 28;
    byte[] tmp1884_1878 = tmp1878_1872;
    tmp1884_1878[31] = 28;
    byte[] tmp1890_1884 = tmp1884_1878;
    tmp1890_1884[32] = 6;
    byte[] tmp1896_1890 = tmp1890_1884;
    tmp1896_1890[33] = 10;
    byte[] tmp1902_1896 = tmp1896_1890;
    tmp1902_1896[34] = 10;
    byte[] tmp1908_1902 = tmp1902_1896;
    tmp1908_1902[35] = 12;
    byte[] tmp1914_1908 = tmp1908_1902;
    tmp1914_1908[36] = 13;
    byte[] tmp1920_1914 = tmp1914_1908;
    tmp1920_1914[37] = 6;
    byte[] tmp1926_1920 = tmp1920_1914;
    tmp1926_1920[38] = 8;
    byte[] tmp1932_1926 = tmp1926_1920;
    tmp1932_1926[39] = 11;
    byte[] tmp1938_1932 = tmp1932_1926;
    tmp1938_1932[40] = 10;
    byte[] tmp1944_1938 = tmp1938_1932;
    tmp1944_1938[41] = 10;
    byte[] tmp1950_1944 = tmp1944_1938;
    tmp1950_1944[42] = 8;
    byte[] tmp1956_1950 = tmp1950_1944;
    tmp1956_1950[43] = 11;
    byte[] tmp1962_1956 = tmp1956_1950;
    tmp1962_1956[44] = 8;
    byte[] tmp1968_1962 = tmp1962_1956;
    tmp1968_1962[45] = 6;
    byte[] tmp1974_1968 = tmp1968_1962;
    tmp1974_1968[46] = 6;
    byte[] tmp1980_1974 = tmp1974_1968;
    tmp1980_1974[47] = 6;
    byte[] tmp1986_1980 = tmp1980_1974;
    tmp1986_1980[48] = 5;
    byte[] tmp1992_1986 = tmp1986_1980;
    tmp1992_1986[49] = 5;
    byte[] tmp1998_1992 = tmp1992_1986;
    tmp1998_1992[50] = 5;
    byte[] tmp2004_1998 = tmp1998_1992;
    tmp2004_1998[51] = 6;
    byte[] tmp2010_2004 = tmp2004_1998;
    tmp2010_2004[52] = 6;
    byte[] tmp2016_2010 = tmp2010_2004;
    tmp2016_2010[53] = 6;
    byte[] tmp2022_2016 = tmp2016_2010;
    tmp2022_2016[54] = 6;
    byte[] tmp2028_2022 = tmp2022_2016;
    tmp2028_2022[55] = 6;
    byte[] tmp2034_2028 = tmp2028_2022;
    tmp2034_2028[56] = 6;
    byte[] tmp2040_2034 = tmp2034_2028;
    tmp2040_2034[57] = 6;
    byte[] tmp2046_2040 = tmp2040_2034;
    tmp2046_2040[58] = 7;
    byte[] tmp2052_2046 = tmp2046_2040;
    tmp2052_2046[59] = 8;
    byte[] tmp2058_2052 = tmp2052_2046;
    tmp2058_2052[60] = 15;
    byte[] tmp2064_2058 = tmp2058_2052;
    tmp2064_2058[61] = 6;
    byte[] tmp2070_2064 = tmp2064_2058;
    tmp2070_2064[62] = 12;
    byte[] tmp2076_2070 = tmp2070_2064;
    tmp2076_2070[63] = 10;
    byte[] tmp2082_2076 = tmp2076_2070;
    tmp2082_2076[64] = 13;
    byte[] tmp2088_2082 = tmp2082_2076;
    tmp2088_2082[65] = 6;
    byte[] tmp2094_2088 = tmp2088_2082;
    tmp2094_2088[66] = 7;
    byte[] tmp2100_2094 = tmp2094_2088;
    tmp2100_2094[67] = 7;
    byte[] tmp2106_2100 = tmp2100_2094;
    tmp2106_2100[68] = 7;
    byte[] tmp2112_2106 = tmp2106_2100;
    tmp2112_2106[69] = 7;
    byte[] tmp2118_2112 = tmp2112_2106;
    tmp2118_2112[70] = 7;
    byte[] tmp2124_2118 = tmp2118_2112;
    tmp2124_2118[71] = 7;
    byte[] tmp2130_2124 = tmp2124_2118;
    tmp2130_2124[72] = 7;
    byte[] tmp2136_2130 = tmp2130_2124;
    tmp2136_2130[73] = 7;
    byte[] tmp2142_2136 = tmp2136_2130;
    tmp2142_2136[74] = 7;
    byte[] tmp2148_2142 = tmp2142_2136;
    tmp2148_2142[75] = 7;
    byte[] tmp2154_2148 = tmp2148_2142;
    tmp2154_2148[76] = 7;
    byte[] tmp2160_2154 = tmp2154_2148;
    tmp2160_2154[77] = 7;
    byte[] tmp2166_2160 = tmp2160_2154;
    tmp2166_2160[78] = 7;
    byte[] tmp2172_2166 = tmp2166_2160;
    tmp2172_2166[79] = 7;
    byte[] tmp2178_2172 = tmp2172_2166;
    tmp2178_2172[80] = 7;
    byte[] tmp2184_2178 = tmp2178_2172;
    tmp2184_2178[81] = 7;
    byte[] tmp2190_2184 = tmp2184_2178;
    tmp2190_2184[82] = 7;
    byte[] tmp2196_2190 = tmp2190_2184;
    tmp2196_2190[83] = 7;
    byte[] tmp2202_2196 = tmp2196_2190;
    tmp2202_2196[84] = 7;
    byte[] tmp2208_2202 = tmp2202_2196;
    tmp2208_2202[85] = 7;
    byte[] tmp2214_2208 = tmp2208_2202;
    tmp2214_2208[86] = 7;
    byte[] tmp2220_2214 = tmp2214_2208;
    tmp2220_2214[87] = 7;
    byte[] tmp2226_2220 = tmp2220_2214;
    tmp2226_2220[88] = 8;
    byte[] tmp2232_2226 = tmp2226_2220;
    tmp2232_2226[89] = 7;
    byte[] tmp2238_2232 = tmp2232_2226;
    tmp2238_2232[90] = 8;
    byte[] tmp2244_2238 = tmp2238_2232;
    tmp2244_2238[91] = 13;
    byte[] tmp2250_2244 = tmp2244_2238;
    tmp2250_2244[92] = 19;
    byte[] tmp2256_2250 = tmp2250_2244;
    tmp2256_2250[93] = 13;
    byte[] tmp2262_2256 = tmp2256_2250;
    tmp2262_2256[94] = 14;
    byte[] tmp2268_2262 = tmp2262_2256;
    tmp2268_2262[95] = 6;
    byte[] tmp2274_2268 = tmp2268_2262;
    tmp2274_2268[96] = 15;
    byte[] tmp2280_2274 = tmp2274_2268;
    tmp2280_2274[97] = 5;
    byte[] tmp2286_2280 = tmp2280_2274;
    tmp2286_2280[98] = 6;
    byte[] tmp2292_2286 = tmp2286_2280;
    tmp2292_2286[99] = 5;
    byte[] tmp2298_2292 = tmp2292_2286;
    tmp2298_2292[100] = 6;
    byte[] tmp2304_2298 = tmp2298_2292;
    tmp2304_2298[101] = 5;
    byte[] tmp2310_2304 = tmp2304_2298;
    tmp2310_2304[102] = 6;
    byte[] tmp2316_2310 = tmp2310_2304;
    tmp2316_2310[103] = 6;
    byte[] tmp2322_2316 = tmp2316_2310;
    tmp2322_2316[104] = 6;
    byte[] tmp2328_2322 = tmp2322_2316;
    tmp2328_2322[105] = 5;
    byte[] tmp2334_2328 = tmp2328_2322;
    tmp2334_2328[106] = 7;
    byte[] tmp2340_2334 = tmp2334_2328;
    tmp2340_2334[107] = 7;
    byte[] tmp2346_2340 = tmp2340_2334;
    tmp2346_2340[108] = 6;
    byte[] tmp2352_2346 = tmp2346_2340;
    tmp2352_2346[109] = 6;
    byte[] tmp2358_2352 = tmp2352_2346;
    tmp2358_2352[110] = 6;
    byte[] tmp2364_2358 = tmp2358_2352;
    tmp2364_2358[111] = 5;
    byte[] tmp2370_2364 = tmp2364_2358;
    tmp2370_2364[112] = 6;
    byte[] tmp2376_2370 = tmp2370_2364;
    tmp2376_2370[113] = 7;
    byte[] tmp2382_2376 = tmp2376_2370;
    tmp2382_2376[114] = 6;
    byte[] tmp2388_2382 = tmp2382_2376;
    tmp2388_2382[115] = 5;
    byte[] tmp2394_2388 = tmp2388_2382;
    tmp2394_2388[116] = 5;
    byte[] tmp2400_2394 = tmp2394_2388;
    tmp2400_2394[117] = 6;
    byte[] tmp2406_2400 = tmp2400_2394;
    tmp2406_2400[118] = 7;
    byte[] tmp2412_2406 = tmp2406_2400;
    tmp2412_2406[119] = 7;
    byte[] tmp2418_2412 = tmp2412_2406;
    tmp2418_2412[120] = 7;
    byte[] tmp2424_2418 = tmp2418_2412;
    tmp2424_2418[121] = 7;
    byte[] tmp2430_2424 = tmp2424_2418;
    tmp2430_2424[122] = 7;
    byte[] tmp2436_2430 = tmp2430_2424;
    tmp2436_2430[123] = 15;
    byte[] tmp2442_2436 = tmp2436_2430;
    tmp2442_2436[124] = 11;
    byte[] tmp2448_2442 = tmp2442_2436;
    tmp2448_2442[125] = 14;
    byte[] tmp2454_2448 = tmp2448_2442;
    tmp2454_2448[126] = 13;
    byte[] tmp2460_2454 = tmp2454_2448;
    tmp2460_2454[127] = 28;
    byte[] tmp2466_2460 = tmp2460_2454;
    tmp2466_2460[''] = 20;
    byte[] tmp2473_2466 = tmp2466_2460;
    tmp2473_2466[''] = 22;
    byte[] tmp2480_2473 = tmp2473_2466;
    tmp2480_2473[''] = 20;
    byte[] tmp2487_2480 = tmp2480_2473;
    tmp2487_2480[''] = 20;
    byte[] tmp2494_2487 = tmp2487_2480;
    tmp2494_2487[''] = 22;
    byte[] tmp2501_2494 = tmp2494_2487;
    tmp2501_2494[''] = 22;
    byte[] tmp2508_2501 = tmp2501_2494;
    tmp2508_2501[''] = 22;
    byte[] tmp2515_2508 = tmp2508_2501;
    tmp2515_2508[''] = 23;
    byte[] tmp2522_2515 = tmp2515_2508;
    tmp2522_2515[''] = 22;
    byte[] tmp2529_2522 = tmp2522_2515;
    tmp2529_2522[''] = 23;
    byte[] tmp2536_2529 = tmp2529_2522;
    tmp2536_2529[''] = 23;
    byte[] tmp2543_2536 = tmp2536_2529;
    tmp2543_2536[''] = 23;
    byte[] tmp2550_2543 = tmp2543_2536;
    tmp2550_2543[''] = 23;
    byte[] tmp2557_2550 = tmp2550_2543;
    tmp2557_2550[''] = 23;
    byte[] tmp2564_2557 = tmp2557_2550;
    tmp2564_2557[''] = 24;
    byte[] tmp2571_2564 = tmp2564_2557;
    tmp2571_2564[''] = 23;
    byte[] tmp2578_2571 = tmp2571_2564;
    tmp2578_2571[''] = 24;
    byte[] tmp2585_2578 = tmp2578_2571;
    tmp2585_2578[''] = 24;
    byte[] tmp2592_2585 = tmp2585_2578;
    tmp2592_2585[''] = 22;
    byte[] tmp2599_2592 = tmp2592_2585;
    tmp2599_2592[''] = 23;
    byte[] tmp2606_2599 = tmp2599_2592;
    tmp2606_2599[''] = 24;
    byte[] tmp2613_2606 = tmp2606_2599;
    tmp2613_2606[''] = 23;
    byte[] tmp2620_2613 = tmp2613_2606;
    tmp2620_2613[''] = 23;
    byte[] tmp2627_2620 = tmp2620_2613;
    tmp2627_2620[''] = 23;
    byte[] tmp2634_2627 = tmp2627_2620;
    tmp2634_2627[''] = 23;
    byte[] tmp2641_2634 = tmp2634_2627;
    tmp2641_2634[''] = 21;
    byte[] tmp2648_2641 = tmp2641_2634;
    tmp2648_2641[''] = 22;
    byte[] tmp2655_2648 = tmp2648_2641;
    tmp2655_2648[''] = 23;
    byte[] tmp2662_2655 = tmp2655_2648;
    tmp2662_2655[''] = 22;
    byte[] tmp2669_2662 = tmp2662_2655;
    tmp2669_2662[''] = 23;
    byte[] tmp2676_2669 = tmp2669_2662;
    tmp2676_2669[''] = 23;
    byte[] tmp2683_2676 = tmp2676_2669;
    tmp2683_2676[''] = 24;
    byte[] tmp2690_2683 = tmp2683_2676;
    tmp2690_2683[' '] = 22;
    byte[] tmp2697_2690 = tmp2690_2683;
    tmp2697_2690['¡'] = 21;
    byte[] tmp2704_2697 = tmp2697_2690;
    tmp2704_2697['¢'] = 20;
    byte[] tmp2711_2704 = tmp2704_2697;
    tmp2711_2704['£'] = 22;
    byte[] tmp2718_2711 = tmp2711_2704;
    tmp2718_2711['¤'] = 22;
    byte[] tmp2725_2718 = tmp2718_2711;
    tmp2725_2718['¥'] = 23;
    byte[] tmp2732_2725 = tmp2725_2718;
    tmp2732_2725['¦'] = 23;
    byte[] tmp2739_2732 = tmp2732_2725;
    tmp2739_2732['§'] = 21;
    byte[] tmp2746_2739 = tmp2739_2732;
    tmp2746_2739['¨'] = 23;
    byte[] tmp2753_2746 = tmp2746_2739;
    tmp2753_2746['©'] = 22;
    byte[] tmp2760_2753 = tmp2753_2746;
    tmp2760_2753['ª'] = 22;
    byte[] tmp2767_2760 = tmp2760_2753;
    tmp2767_2760['«'] = 24;
    byte[] tmp2774_2767 = tmp2767_2760;
    tmp2774_2767['¬'] = 21;
    byte[] tmp2781_2774 = tmp2774_2767;
    tmp2781_2774['­'] = 22;
    byte[] tmp2788_2781 = tmp2781_2774;
    tmp2788_2781['®'] = 23;
    byte[] tmp2795_2788 = tmp2788_2781;
    tmp2795_2788['¯'] = 23;
    byte[] tmp2802_2795 = tmp2795_2788;
    tmp2802_2795['°'] = 21;
    byte[] tmp2809_2802 = tmp2802_2795;
    tmp2809_2802['±'] = 21;
    byte[] tmp2816_2809 = tmp2809_2802;
    tmp2816_2809['²'] = 22;
    byte[] tmp2823_2816 = tmp2816_2809;
    tmp2823_2816['³'] = 21;
    byte[] tmp2830_2823 = tmp2823_2816;
    tmp2830_2823['´'] = 23;
    byte[] tmp2837_2830 = tmp2830_2823;
    tmp2837_2830['µ'] = 22;
    byte[] tmp2844_2837 = tmp2837_2830;
    tmp2844_2837['¶'] = 23;
    byte[] tmp2851_2844 = tmp2844_2837;
    tmp2851_2844['·'] = 23;
    byte[] tmp2858_2851 = tmp2851_2844;
    tmp2858_2851['¸'] = 20;
    byte[] tmp2865_2858 = tmp2858_2851;
    tmp2865_2858['¹'] = 22;
    byte[] tmp2872_2865 = tmp2865_2858;
    tmp2872_2865['º'] = 22;
    byte[] tmp2879_2872 = tmp2872_2865;
    tmp2879_2872['»'] = 22;
    byte[] tmp2886_2879 = tmp2879_2872;
    tmp2886_2879['¼'] = 23;
    byte[] tmp2893_2886 = tmp2886_2879;
    tmp2893_2886['½'] = 22;
    byte[] tmp2900_2893 = tmp2893_2886;
    tmp2900_2893['¾'] = 22;
    byte[] tmp2907_2900 = tmp2900_2893;
    tmp2907_2900['¿'] = 23;
    byte[] tmp2914_2907 = tmp2907_2900;
    tmp2914_2907['À'] = 26;
    byte[] tmp2921_2914 = tmp2914_2907;
    tmp2921_2914['Á'] = 26;
    byte[] tmp2928_2921 = tmp2921_2914;
    tmp2928_2921['Â'] = 20;
    byte[] tmp2935_2928 = tmp2928_2921;
    tmp2935_2928['Ã'] = 19;
    byte[] tmp2942_2935 = tmp2935_2928;
    tmp2942_2935['Ä'] = 22;
    byte[] tmp2949_2942 = tmp2942_2935;
    tmp2949_2942['Å'] = 23;
    byte[] tmp2956_2949 = tmp2949_2942;
    tmp2956_2949['Æ'] = 22;
    byte[] tmp2963_2956 = tmp2956_2949;
    tmp2963_2956['Ç'] = 25;
    byte[] tmp2970_2963 = tmp2963_2956;
    tmp2970_2963['È'] = 26;
    byte[] tmp2977_2970 = tmp2970_2963;
    tmp2977_2970['É'] = 26;
    byte[] tmp2984_2977 = tmp2977_2970;
    tmp2984_2977['Ê'] = 26;
    byte[] tmp2991_2984 = tmp2984_2977;
    tmp2991_2984['Ë'] = 27;
    byte[] tmp2998_2991 = tmp2991_2984;
    tmp2998_2991['Ì'] = 27;
    byte[] tmp3005_2998 = tmp2998_2991;
    tmp3005_2998['Í'] = 26;
    byte[] tmp3012_3005 = tmp3005_2998;
    tmp3012_3005['Î'] = 24;
    byte[] tmp3019_3012 = tmp3012_3005;
    tmp3019_3012['Ï'] = 25;
    byte[] tmp3026_3019 = tmp3019_3012;
    tmp3026_3019['Ð'] = 19;
    byte[] tmp3033_3026 = tmp3026_3019;
    tmp3033_3026['Ñ'] = 21;
    byte[] tmp3040_3033 = tmp3033_3026;
    tmp3040_3033['Ò'] = 26;
    byte[] tmp3047_3040 = tmp3040_3033;
    tmp3047_3040['Ó'] = 27;
    byte[] tmp3054_3047 = tmp3047_3040;
    tmp3054_3047['Ô'] = 27;
    byte[] tmp3061_3054 = tmp3054_3047;
    tmp3061_3054['Õ'] = 26;
    byte[] tmp3068_3061 = tmp3061_3054;
    tmp3068_3061['Ö'] = 27;
    byte[] tmp3075_3068 = tmp3068_3061;
    tmp3075_3068['×'] = 24;
    byte[] tmp3082_3075 = tmp3075_3068;
    tmp3082_3075['Ø'] = 21;
    byte[] tmp3089_3082 = tmp3082_3075;
    tmp3089_3082['Ù'] = 21;
    byte[] tmp3096_3089 = tmp3089_3082;
    tmp3096_3089['Ú'] = 26;
    byte[] tmp3103_3096 = tmp3096_3089;
    tmp3103_3096['Û'] = 26;
    byte[] tmp3110_3103 = tmp3103_3096;
    tmp3110_3103['Ü'] = 28;
    byte[] tmp3117_3110 = tmp3110_3103;
    tmp3117_3110['Ý'] = 27;
    byte[] tmp3124_3117 = tmp3117_3110;
    tmp3124_3117['Þ'] = 27;
    byte[] tmp3131_3124 = tmp3124_3117;
    tmp3131_3124['ß'] = 27;
    byte[] tmp3138_3131 = tmp3131_3124;
    tmp3138_3131['à'] = 20;
    byte[] tmp3145_3138 = tmp3138_3131;
    tmp3145_3138['á'] = 24;
    byte[] tmp3152_3145 = tmp3145_3138;
    tmp3152_3145['â'] = 20;
    byte[] tmp3159_3152 = tmp3152_3145;
    tmp3159_3152['ã'] = 21;
    byte[] tmp3166_3159 = tmp3159_3152;
    tmp3166_3159['ä'] = 22;
    byte[] tmp3173_3166 = tmp3166_3159;
    tmp3173_3166['å'] = 21;
    byte[] tmp3180_3173 = tmp3173_3166;
    tmp3180_3173['æ'] = 21;
    byte[] tmp3187_3180 = tmp3180_3173;
    tmp3187_3180['ç'] = 23;
    byte[] tmp3194_3187 = tmp3187_3180;
    tmp3194_3187['è'] = 22;
    byte[] tmp3201_3194 = tmp3194_3187;
    tmp3201_3194['é'] = 22;
    byte[] tmp3208_3201 = tmp3201_3194;
    tmp3208_3201['ê'] = 25;
    byte[] tmp3215_3208 = tmp3208_3201;
    tmp3215_3208['ë'] = 25;
    byte[] tmp3222_3215 = tmp3215_3208;
    tmp3222_3215['ì'] = 24;
    byte[] tmp3229_3222 = tmp3222_3215;
    tmp3229_3222['í'] = 24;
    byte[] tmp3236_3229 = tmp3229_3222;
    tmp3236_3229['î'] = 26;
    byte[] tmp3243_3236 = tmp3236_3229;
    tmp3243_3236['ï'] = 23;
    byte[] tmp3250_3243 = tmp3243_3236;
    tmp3250_3243['ð'] = 26;
    byte[] tmp3257_3250 = tmp3250_3243;
    tmp3257_3250['ñ'] = 27;
    byte[] tmp3264_3257 = tmp3257_3250;
    tmp3264_3257['ò'] = 26;
    byte[] tmp3271_3264 = tmp3264_3257;
    tmp3271_3264['ó'] = 26;
    byte[] tmp3278_3271 = tmp3271_3264;
    tmp3278_3271['ô'] = 27;
    byte[] tmp3285_3278 = tmp3278_3271;
    tmp3285_3278['õ'] = 27;
    byte[] tmp3292_3285 = tmp3285_3278;
    tmp3292_3285['ö'] = 27;
    byte[] tmp3299_3292 = tmp3292_3285;
    tmp3299_3292['÷'] = 27;
    byte[] tmp3306_3299 = tmp3299_3292;
    tmp3306_3299['ø'] = 27;
    byte[] tmp3313_3306 = tmp3306_3299;
    tmp3313_3306['ù'] = 28;
    byte[] tmp3320_3313 = tmp3313_3306;
    tmp3320_3313['ú'] = 27;
    byte[] tmp3327_3320 = tmp3320_3313;
    tmp3327_3320['û'] = 27;
    byte[] tmp3334_3327 = tmp3327_3320;
    tmp3334_3327['ü'] = 27;
    byte[] tmp3341_3334 = tmp3334_3327;
    tmp3341_3334['ý'] = 27;
    byte[] tmp3348_3341 = tmp3341_3334;
    tmp3348_3341['þ'] = 27;
    byte[] tmp3355_3348 = tmp3348_3341;
    tmp3355_3348['ÿ'] = 26;
    tmp3355_3348;
    c = arrayOfByte;
    d = new a();
    int j = arrayOfByte.length;
    int i = 0;
    while (i < j)
    {
      a.a(i, b[i], c[i]);
      i += 1;
    }
  }
  
  private final void a(int paramInt1, int paramInt2, int paramInt3)
  {
    a locala2 = new a(paramInt1, paramInt3);
    Object localObject = d;
    while (paramInt3 > 8)
    {
      paramInt3 -= 8;
      paramInt1 = paramInt2 >>> paramInt3 & 0xFF;
      a[] arrayOfa = ((a)localObject).a();
      a9.f.c(arrayOfa);
      a locala1 = arrayOfa[paramInt1];
      localObject = locala1;
      if (locala1 == null)
      {
        localObject = new a();
        arrayOfa[paramInt1] = localObject;
      }
    }
    paramInt1 = 8 - paramInt3;
    paramInt2 = paramInt2 << paramInt1 & 0xFF;
    localObject = ((a)localObject).a();
    a9.f.c(localObject);
    p8.f.k((Object[])localObject, locala2, paramInt2, (1 << paramInt1) + paramInt2);
  }
  
  public final void b(d paramd, long paramLong, c paramc)
  {
    a9.f.f(paramd, "source");
    a9.f.f(paramc, "sink");
    Object localObject1 = d;
    int k = 0;
    long l1 = 0L;
    int j = 0;
    Object localObject2 = localObject1;
    int i = j;
    if (l1 < paramLong)
    {
      long l2 = l1 + 1L;
      int m = k << 8 | l.b(paramd.readByte(), 255);
      i = j + 8;
      localObject2 = localObject1;
      for (;;)
      {
        localObject1 = localObject2;
        k = m;
        j = i;
        l1 = l2;
        if (i < 8) {
          break;
        }
        localObject1 = ((a)localObject2).a();
        a9.f.c(localObject1);
        localObject2 = localObject1[(m >>> i - 8 & 0xFF)];
        a9.f.c(localObject2);
        if (((a)localObject2).a() == null)
        {
          paramc.F(((a)localObject2).b());
          i -= ((a)localObject2).c();
          localObject2 = d;
        }
        else
        {
          i -= 8;
        }
      }
    }
    while (i > 0)
    {
      paramd = ((a)localObject2).a();
      a9.f.c(paramd);
      paramd = paramd[(k << 8 - i & 0xFF)];
      a9.f.c(paramd);
      if (paramd.a() != null) {
        break;
      }
      if (paramd.c() > i) {
        return;
      }
      paramc.F(paramd.b());
      i -= paramd.c();
      localObject2 = d;
    }
  }
  
  public final void c(e parame, c paramc)
  {
    a9.f.f(parame, "source");
    a9.f.f(paramc, "sink");
    int k = parame.r();
    int j = 0;
    long l = 0L;
    int i = 0;
    while (j < k)
    {
      int n = l.b(parame.d(j), 255);
      int m = b[n];
      n = c[n];
      l = l << n | m;
      i += n;
      while (i >= 8)
      {
        i -= 8;
        paramc.F((int)(l >> i));
      }
      j += 1;
    }
    if (i > 0) {
      paramc.F((int)(l << 8 - i | 255L >>> i));
    }
  }
  
  public final int d(e parame)
  {
    a9.f.f(parame, "bytes");
    int j = parame.r();
    long l = 0L;
    int i = 0;
    while (i < j)
    {
      int k = l.b(parame.d(i), 255);
      l += c[k];
      i += 1;
    }
    return (int)(l + 7 >> 3);
  }
  
  private static final class a
  {
    private final a[] a;
    private final int b;
    private final int c;
    
    public a()
    {
      this.a = new a[256];
      this.b = 0;
      this.c = 0;
    }
    
    public a(int paramInt1, int paramInt2)
    {
      this.a = null;
      this.b = paramInt1;
      paramInt2 &= 0x7;
      paramInt1 = paramInt2;
      if (paramInt2 == 0) {
        paramInt1 = 8;
      }
      this.c = paramInt1;
    }
    
    public final a[] a()
    {
      return this.a;
    }
    
    public final int b()
    {
      return this.b;
    }
    
    public final int c()
    {
      return this.c;
    }
  }
}


/* Location:           E:\android_tools\AndroidKiller_v1.3.1\projects\hoxin-release\ProjectSrc\smali\
 * Qualified Name:     t9.k
 * JD-Core Version:    0.7.0.1
 */